const { Schema } = require("mongoose");
//this connects to mongoose for this file

const flight = new Schema(
  {
    airline: { type: String, required: true },
    flightNumber: { type: Number, required: true },
    price: { type: Number, required: true },
    numberOfSeats: { type: Number, required: true },
    departingAirport: {
      type: Schema.Types.ObjectId,
      ref: "airport._id",
      required: true,
    },
    //Schema.Types.ObjectId: This part specifies the data type of the field. It's of type Schema.Types.ObjectId, which is commonly used in Mongoose to represent MongoDB ObjectIDs. ObjectIDs are unique identifiers automatically generated by MongoDB for documents in a collection.
    //ref: 'airport_id': This part specifies the reference to another Mongoose model. In this case, it's referencing the "airport_id" model. When you create a relationship between documents in different collections, you use references to associate them. So, in this schema, departingAirport is linked to documents in the "airport_id" collection.
   arrivalAirport: {
   type: Schema.Types.ObjectId,
   ref: "airport._id",
   required: true,
    },
   DepartureDateTime: { type: Date, required: true },
    },
   { timestamps: true }
);

module.exports = flight;

//flight is the child of airport (because it is referencing airport after the type)
